# Generated by Selenium IDE
import os
import pytest
import time
import json
import configparser
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service

class WebProUploadFile():
  def setupMethod(self):
    # get parent directory
    runTest.workDir = os.getcwd()
    # read config.ini
    path = self.workDir + "\Config"
    self.config = configparser.ConfigParser()
    self.config.read(os.path.join(path, 'config.ini'))

  def tearUpMethod(self):
    service = Service(self.workDir + '\Bin\chromedriver.exe')
    self.driver = webdriver.Chrome(service = service)
    self.driver.maximize_window()
    self.vars = {}
  
  def tearDownMethod(self):
    self.driver.quit()
  
  def webProUploadFile(self):
    webpro_username = self.config['WEBPRO']['username']
    webpro_password = self.config['WEBPRO']['password']
    webpro_url = self.config['WEBPRO']['webProUrl']
    
    self.driver.get(webpro_url)
    self.driver.find_element(By.ID, "maintainer").click()
    self.driver.find_element(By.ID, "maintainer").send_keys(webpro_username)
    self.driver.find_element(By.ID, "pw").click()
    self.driver.find_element(By.ID, "pw").send_keys(webpro_password)
    self.driver.find_element(By.NAME, "bv:act_OK").click()
    
    element = self.driver.find_element(By.ID, "menu_item_entries")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#menu_item_entries").click()
    self.driver.find_element(By.CSS_SELECTOR, ".unselected:nth-child(10) span").click()
    
    bulkFilesDir = self.workDir + "\Content\Files"
    bulkFiles = self.config['WEBPRO']['bulkFile'].split(',')
    
    for name in bulkFiles:
      self.bulkFilesUpload(name, bulkFilesDir)

  def bulkFilesUpload(self, fileName, fileDir):
    self.driver.find_element(By.NAME, "bv:act_UploadFile").click()
    self.driver.find_element(By.ID, "resourcePath").click()
    self.driver.find_element(By.ID, "resourcePath").send_keys(fileName)
    self.driver.find_element(By.ID, "resourceName").click()
    self.driver.find_element(By.ID, "resourceName").send_keys(fileName)
    self.driver.find_element(By.XPATH, "//input[@id=\'imageName\']").send_keys(fileDir + "/" + fileName)
    self.driver.find_element(By.NAME, "bv:act_action_Public").click()
  
if __name__ == '__main__':
  print("Hi python")
  runTest = WebProUploadFile()
  runTest.setupMethod()
  runTest.tearUpMethod()
  runTest.webProUploadFile()
  runTest.tearDownMethod()
  
